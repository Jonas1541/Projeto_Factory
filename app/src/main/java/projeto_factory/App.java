/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package projeto_factory;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.List;
import org.bson.Document;
import java.sql.Connection;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;

public class App {
    public static void main(String[] args) {

        // Instanciar a fabrica de cursos
        CursoFactory factory = new CursoFactory();

        // A fabrica devolve o tipo de curso baseado no parâmetro (tecnico, bacharelado
        // ou mestrado)
        // Se nenhum desses parãmetros foi passado, ela retorna null automaticamente
        iCurso curso = factory.getCurso("tecnico");


        // Crie instâncias de estudantes

        Estudante estudante = new Estudante("Coringa11");

        Disciplina disciplina = new Disciplina("Matematica", "5.0", "Tecnico");

        estudante.addDisciplina(disciplina);

        System.out.println(curso.Avaliacao(estudante));

        // Configuração da conexão com o MongoDB
        MongoClient mongoClient = MongoClients.create("mongodb://localhost:27017");
        MongoDatabase database = mongoClient.getDatabase("estudantesDB");
        MongoCollection<Document> estudantesCollection = database.getCollection("estudantesCollection");

        

        // Cria uma instância de MongoArmazenamento com a coleção configurada
        iArmazenamento mongoArmazenamento = new MongoDBArmazenamento(estudantesCollection);
        // Cria uma instância de Armazenador com o MongoArmazenamento
        Armazenador armazenadorComMongo = new Armazenador(mongoArmazenamento);

        // Cria uma instância de MySQLArmazenamento com a coleção configurada
        iArmazenamento mySQLArmazenamento = new MySQLArmazenamento();
        // Cria uma instância de Armazenador com o MongoArmazenamento
        Armazenador armazenadorComMySQL = new Armazenador(mySQLArmazenamento);

        // Adicione os estudantes ao armazenador da concessionária com o Mongo
         //armazenadorComMongo.adicionarEstudante(estudante);
         armazenadorComMySQL.adicionarEstudante(estudante);



         // Liste estudantes
        List<Estudante> estudantes = armazenadorComMySQL.listarEstudantes();
        System.out.println("------------------------------------------------------------");
        System.out.println("------------------------------------------------------------");
        System.out.println("\nEstudantes Cadastrados:");
        for (Estudante estudiante : estudantes) {
            System.out.println(
                    "Nome: " + estudiante.getNome());
        }
    }

    public static Connection getConnection() throws SQLException {
        String url = "jdbc:mysql://localhost:3306/SQLdb";
        String user = "root";
        String password = "root";
        return DriverManager.getConnection(url, user, password);
    }
}
